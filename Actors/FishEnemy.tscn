[gd_scene load_steps=20 format=2]

[ext_resource path="res://Actors/FishEnemy.gd" type="Script" id=1]
[ext_resource path="res://Assets/Models/EelModel.tscn" type="PackedScene" id=2]
[ext_resource path="res://Assets/Sprites/Sparks/spark_03.png" type="Texture" id=3]
[ext_resource path="res://Assets/Sprites/Sparks/spark_03_less.png" type="Texture" id=4]
[ext_resource path="res://Assets/Sprites/Sparks/spark_01.png" type="Texture" id=5]

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0, 0.00645161, 0.0322581, 0.0516129 )
colors = PoolColorArray( 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0.243137, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=7]
gradient = SubResource( 6 )

[sub_resource type="ParticlesMaterial" id=8]
emission_shape = 2
emission_box_extents = Vector3( 1, 0.3, 0.3 )
gravity = Vector3( 0, 0, 0 )
angle = 720.0
angle_random = 1.0
scale = 3.0
scale_random = 1.0
color_ramp = SubResource( 7 )

[sub_resource type="SpatialMaterial" id=9]
flags_transparent = true
vertex_color_use_as_albedo = true
vertex_color_is_srgb = true
params_billboard_mode = 3
particles_anim_h_frames = 1
particles_anim_v_frames = 1
particles_anim_loop = false
albedo_texture = ExtResource( 3 )
emission_enabled = true
emission = Color( 1, 0.960784, 0.45098, 1 )
emission_energy = 2.0
emission_operator = 0
emission_on_uv2 = false
emission_texture = ExtResource( 4 )

[sub_resource type="QuadMesh" id=10]
material = SubResource( 9 )
size = Vector2( 0.4, 0.4 )

[sub_resource type="ParticlesMaterial" id=11]
emission_shape = 2
emission_box_extents = Vector3( 1, 0.3, 0.3 )
gravity = Vector3( 0, 0, 0 )
angle = 720.0
angle_random = 1.0
scale = 3.0
scale_random = 1.0
color_ramp = SubResource( 7 )

[sub_resource type="Shader" id=12]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.rc8's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform int particles_anim_h_frames;
uniform int particles_anim_v_frames;
uniform bool particles_anim_loop;
uniform sampler2D texture_emission : hint_black_albedo;
uniform vec4 emission : hint_color;
uniform float emission_energy;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	if (!OUTPUT_IS_SRGB) {
		COLOR.rgb = mix(pow((COLOR.rgb + vec3(0.055)) * (1.0 / (1.0 + 0.055)), vec3(2.4)), COLOR.rgb * (1.0 / 12.92), lessThan(COLOR.rgb, vec3(0.04045)));
	}
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	mat4 mat_world = mat4(normalize(CAMERA_MATRIX[0])*length(WORLD_MATRIX[0]),normalize(CAMERA_MATRIX[1])*length(WORLD_MATRIX[0]),normalize(CAMERA_MATRIX[2])*length(WORLD_MATRIX[2]),WORLD_MATRIX[3]);
	mat_world = mat_world * mat4( vec4(cos(INSTANCE_CUSTOM.x),-sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0),vec4(0.0, 0.0, 1.0, 0.0),vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat_world;
	float h_frames = float(particles_anim_h_frames);
	float v_frames = float(particles_anim_v_frames);
	float particle_total_frames = float(particles_anim_h_frames * particles_anim_v_frames);
	float particle_frame = floor(INSTANCE_CUSTOM.z * float(particle_total_frames));
	if (!particles_anim_loop) {
		particle_frame = clamp(particle_frame, 0.0, particle_total_frames - 1.0);
	} else {
		particle_frame = mod(particle_frame, particle_total_frames);
	}	UV /= vec2(h_frames, v_frames);
	UV += vec2(mod(particle_frame, h_frames) / h_frames, floor((particle_frame + 0.5) / h_frames) / v_frames);
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	albedo_tex *= COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	EMISSION = (emission.rgb+emission_tex)*emission_energy * 8.0;
	ALPHA = albedo.a * pow(albedo_tex.a, 2.0);
}
"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/particles_anim_h_frames = 1
shader_param/particles_anim_v_frames = 1
shader_param/particles_anim_loop = false
shader_param/emission = Color( 0.996078, 1, 0.533333, 1 )
shader_param/emission_energy = 4.61
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 5 )

[sub_resource type="QuadMesh" id=14]
material = SubResource( 13 )
size = Vector2( 0.8, 0.8 )

[sub_resource type="CubeMesh" id=1]

[sub_resource type="CubeMesh" id=2]

[sub_resource type="CapsuleShape" id=3]
radius = 0.966859
height = 1.13097

[sub_resource type="SphereShape" id=4]
radius = 5.15545

[sub_resource type="CapsuleShape" id=5]
radius = 0.42254

[node name="FishEnemy" type="Spatial" groups=["networked_slowly"]]
script = ExtResource( 1 )

[node name="Model" type="Spatial" parent="."]

[node name="Particles" type="Particles" parent="Model"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.885371, 0 )
amount = 5
lifetime = 3.0
speed_scale = 0.5
randomness = 1.0
local_coords = false
process_material = SubResource( 8 )
draw_pass_1 = SubResource( 10 )

[node name="AttackParticles" type="Particles" parent="Model"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.885371, 0 )
emitting = false
amount = 10
lifetime = 2.5
speed_scale = 0.6
explosiveness = 0.56
randomness = 1.0
local_coords = false
process_material = SubResource( 11 )
draw_pass_1 = SubResource( 14 )

[node name="MeshInstance" type="MeshInstance" parent="Model"]
transform = Transform( 0.814905, 0, 0, 0, 0.3627, 0, 0, 0, 0.218026, 0, 0.871302, 0 )
visible = false
mesh = SubResource( 1 )
skeleton = NodePath("../..")

[node name="MeshInstance2" type="MeshInstance" parent="Model"]
transform = Transform( 0.451127, 0, 0, 0, 0.0943436, 0, 0, 0, 0.445862, 0.295647, 0.817325, 0 )
visible = false
mesh = SubResource( 2 )

[node name="EelModel" parent="Model" instance=ExtResource( 2 )]
transform = Transform( 3.28694e-07, -1.56473, -0.0325324, 2.54927e-07, 0.0325324, -1.56473, 1.56507, 3.23324e-07, 2.61705e-07, 0.910279, 0.839382, 0.0126855 )
sync_bones_with_spatials = true

[node name="Hurtbox" type="Area" parent="."]
collision_layer = 8
collision_mask = 0

[node name="CollisionShape" type="CollisionShape" parent="Hurtbox"]
transform = Transform( -4.37114e-08, 0, 1, 0, 1.811, 0, -1, 0, -4.37114e-08, 0, 1.13792, 0 )
shape = SubResource( 3 )

[node name="PlayerDetection" type="Area" parent="."]
collision_layer = 0
collision_mask = 32

[node name="CollisionShape" type="CollisionShape" parent="PlayerDetection"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.505126, 0 )
shape = SubResource( 4 )

[node name="Hitbox" type="Area" parent="."]
collision_layer = 0
collision_mask = 16

[node name="CollisionShape" type="CollisionShape" parent="Hitbox"]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0.833759, 0 )
shape = SubResource( 5 )

[connection signal="area_entered" from="Hurtbox" to="." method="_on_Hurtbox_area_entered"]
[connection signal="area_entered" from="PlayerDetection" to="." method="_on_PlayerDetection_area_entered"]
[connection signal="area_entered" from="Hitbox" to="." method="_on_Hitbox_area_entered"]
